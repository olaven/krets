name: deploy

on:
  push:
    branches: 
      - master
      - test-digitalocean-droplet

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.18
      uses: actions/setup-node@v1
      with:
        node-version: '12.18'
    # - name: Install yarn and run unittest
    #   run: yarn && yarn test 
    #   env:
    #     CI: true
    - name: Publish to Github Packages Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AUTH0_DOMAIN: ${{  secrets.AUTH0_DOMAIN  }}
        AUTH0_CLIENT_ID: ${{  secrets.AUTH0_CLIENT_ID  }}
        AUTH0_CLIENT_SECRET: ${{  secrets.AUTH0_CLIENT_SECRET  }}
        REDIRECT_URI: ${{  secrets.REDIRECT_URI  }}
        POST_LOGOUT_REDIRECT_URI: ${{  secrets.POST_LOGOUT_REDIRECT_URI  }}
        SESSION_COOKIE_SECRET: ${{  secrets.SESSION_COOKIE_SECRET  }}
        PGHOST: ${{  secrets.PGHOST  }}
        PGUSER: ${{  secrets.PGUSER  }}
        PGPORT: ${{  secrets.PGPORT  }}
        PGPASSWORD: ${{  secrets.PGPASSWORD  }}
        PGDATABASE: ${{  secrets.PGDATABASE  }}
        PGSSLMODE: ${{  secrets.PGSSLMODE  }}
        SSH_DATABASE_CERTIFICATE: ${{  secrets.SSH_DATABASE_CERTIFICATE  }}
      with:
        name: olaven/krets/image #${{ secrets.GITHUB_REPOSITORY }}/image
        registry: docker.pkg.github.com
        username: ${{ github.actor }} 
        password: ${{ secrets.GITHUB_TOKEN }}
        dockerfile: Dockerfile
        tags: latest
        buildargs: GITHUB_USERNAME,GITHUB_TOKEN,AUTH0_DOMAIN,AUTH0_CLIENT_ID,AUTH0_CLIENT_SECRET,REDIRECT_URI,POST_LOGOUT_REDIRECT_URI,SESSION_COOKIE_SECRET,PGHOST,PGUSER,PGPORT,PGPASSWORD,PGDATABASE,PGSSLMODE,SSH_DATABASE_CERTIFICATE
    - name: Deploy package to digitalocean
      uses: appleboy/ssh-action@master
      env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        host: ${{ secrets.DO_DROPLET_HOST }}
        username: ${{ secrets.DO_DROPLET_USERNAME }}
        password: ${{ secrets.DO_DROPLET_PASSWORD }}
        port: ${{ secrets.DO_DROPLET_PORT }}
        envs: GITHUB_USERNAME,GITHUB_TOKEN,GITHUB_REPOSITORY
        script: |
          docker stop $(docker ps -a -q)
          docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
          docker pull docker.pkg.github.com/$(secrets.GITHUB_REPOSITORY)/image:latest
          docker run -dit -p 80:80 docker.pkg.github.com/$(secrets.GITHUB_REPOSITORY)/image:latest
