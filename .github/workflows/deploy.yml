name: deploy

on:
  push:
    branches: 
      - master
      - serverconfig-in-git

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    
    - uses: actions/checkout@v1

    
#    - name: Publish image Github Packages Registry
      #uses: elgohr/Publish-Docker-Github-Action@master
      #env: 
        #GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #with:
        #name: ${{ github.repository }}/image
        #registry: docker.pkg.github.com
        #username: ${{ github.actor }} 
        #password: ${{ secrets.GITHUB_TOKEN }}
        #dockerfile: Dockerfile
        #tags: latest 

    
    - name: Pull image and restart on Digitalocean
      uses: appleboy/ssh-action@master
      env:
        GITHUB_USERNAME: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AUTH0_DOMAIN: ${{  secrets.AUTH0_DOMAIN  }}
        AUTH0_CLIENT_ID: ${{  secrets.AUTH0_CLIENT_ID  }}
        AUTH0_CLIENT_SECRET: ${{  secrets.AUTH0_CLIENT_SECRET  }}
        REDIRECT_URI: ${{  secrets.REDIRECT_URI  }}
        POST_LOGOUT_REDIRECT_URI: ${{  secrets.POST_LOGOUT_REDIRECT_URI  }}
        SESSION_COOKIE_SECRET: ${{  secrets.SESSION_COOKIE_SECRET  }}
        PGHOST: ${{  secrets.PGHOST  }}
        PGUSER: ${{  secrets.PGUSER  }}
        PGPORT: ${{  secrets.PGPORT  }}
        PGPASSWORD: ${{  secrets.PGPASSWORD  }}
        PGDATABASE: ${{  secrets.PGDATABASE  }}
        PGSSLMODE: ${{  secrets.PGSSLMODE  }}
      with:
        host: ${{ secrets.DO_DROPLET_HOST }}
        username: ${{ secrets.DO_DROPLET_USERNAME }}
        password: ${{ secrets.DO_DROPLET_PASSWORD }}
        port: ${{ secrets.DO_DROPLET_PORT }}
        envs: GITHUB_USERNAME,GITHUB_TOKEN,AUTH0_DOMAIN,AUTH0_CLIENT_ID,AUTH0_CLIENT_SECRET,REDIRECT_URI,POST_LOGOUT_REDIRECT_URI,SESSION_COOKIE_SECRET,PGHOST,PGUSER,PGPORT,PGPASSWORD,PGDATABASE,PGSSLMODE,SSH_DATABASE_CERTIFICATE #,HTTPS_SERVER_PRIVKEY,HTTPS_SERVER_FULLCHAIN,HTTPS_SERVER_CHAIN
        script: |
          export GITHUB_USERNAME=$GITHUB_USERNAME
          export GITHUB_TOKEN=$GITHUB_TOKEN
          export AUTH0_DOMAIN=$AUTH0_DOMAIN
          export AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID
          export AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET
          export REDIRECT_URI=$REDIRECT_URI
          export POST_LOGOUT_REDIRECT_URI=$POST_LOGOUT_REDIRECT_URI
          export SESSION_COOKIE_SECRET=$SESSION_COOKIE_SECRET
          export PGHOST=$PGHOST
          export PGUSER=$PGUSER
          export PGPORT=$PGPORT
          export PGPASSWORD=$PGPASSWORD
          export PGDATABASE=$PGDATABASE
          export PGSSLMODE=$PGSSLMODE
          cd /home/olaven/krets
          git pull 
          docker-compose build nodejs  
          docker-compose up -d --force-recreate nodejs 
#          cd /home/olaven/node_project
#          echo $GITHUB_TOKEN | docker login docker.pkg.github.com --username $GITHUB_USERNAME --password-stdin
#          docker-compose pull nodejs 
#          docker-compose up -d --force-recreate nodejs 
          
